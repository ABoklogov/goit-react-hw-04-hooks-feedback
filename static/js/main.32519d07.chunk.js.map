{"version":3,"sources":["components/Statistics/StatisticsItem/StatisticsItem.js","components/Statistics/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/App/App.js","index.js"],"names":["StatisticsItem","lebel","value","Notification","message","className","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","review","type","name","onClick","Section","title","children","App","useState","setGood","setNeutral","setBad","arrState","Object","keys","countTotalFeedback","prevGood","prevNeutral","prevBad","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAeeA,EAbQ,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC/B,OACE,+BACGD,EADH,MACaC,MCMFC,G,MARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGC,UAAU,eAAb,SAA6BD,MC+BvBE,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,4CACW,IAAVD,EACC,cAAC,EAAD,CAAcN,QAAQ,sBAEtB,qBAAIC,UAAU,kBAAd,UACE,cAAC,EAAD,CAAgBJ,MAAM,OAAOC,MAAOK,IACpC,cAAC,EAAD,CAAgBN,MAAM,UAAUC,MAAOM,IACvC,cAAC,EAAD,CAAgBP,MAAM,MAAMC,MAAOO,IACnC,cAAC,EAAD,CAAgBR,MAAM,QAAQC,MAAOQ,IACrC,cAAC,EAAD,CACET,MAAM,oBACNC,MAAiB,IAAVQ,EAAc,EAAd,UAAqBC,EAArB,cCQJC,G,MAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIT,UAAU,gBAAd,SACGQ,EAAQE,KAAI,SAAAC,GAAM,OACjB,oBAAiBX,UAAU,iBAA3B,SACE,wBACEY,KAAK,SACLC,KAAMF,EACNX,UAAU,eACVc,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,KAPIA,UCIFI,G,MATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,sBAAKjB,UAAU,UAAf,UACE,6BAAKgB,IACJC,OCkDQC,EAnDH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOjB,EAAP,KAAakB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOhB,EAAP,KAAgBkB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOf,EAAP,KAAYkB,EAAZ,KAEMC,EAAWC,OAAOC,KAAK,CAAEvB,OAAMC,UAASC,QAqBxCsB,EAAqB,WACzB,OAAOxB,EAAOC,EAAUC,GAQ1B,OACE,mCACE,eAAC,EAAD,CAASY,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBR,QAASe,EAAUd,gBA/BxB,SAAAE,GAChB,OAAQA,GACN,KAAKY,EAAS,GACZH,GAAQ,SAAAO,GAAQ,OAAIA,EAAW,KAC/B,MAEF,KAAKJ,EAAS,GACZF,GAAW,SAAAO,GAAW,OAAIA,EAAc,KACxC,MAEF,KAAKL,EAAS,GACZD,GAAO,SAAAO,GAAO,OAAIA,EAAU,KAC5B,MAEF,QACE,WAiBA,cAAC,EAAD,CACE3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,IACPpB,mBAdgC,WACtC,IAAMD,EAAQqB,IACd,OAAOI,KAAKC,MAAc,IAAP7B,EAAcG,GAYP2B,W,MC5C9BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.32519d07.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst StatisticsItem = ({ lebel, value }) => {\n  return (\n    <li>\n      {lebel} : {value}\n    </li>\n  );\n};\n\nStatisticsItem.propTypes = {\n  lebel: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default StatisticsItem;\n","import PropTypes from 'prop-types';\nimport './Notification.scss';\n\nconst Notification = ({ message }) => {\n  return <p className=\"notification\">{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport './Statistics.scss';\nimport StatisticsItem from './StatisticsItem';\nimport Notification from './Notification';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <h2>Statistics</h2>\n      {total === 0 ? (\n        <Notification message=\"No feedback given\" />\n      ) : (\n        <ul className=\"statistics-list\">\n          <StatisticsItem lebel=\"Good\" value={good} />\n          <StatisticsItem lebel=\"Neutral\" value={neutral} />\n          <StatisticsItem lebel=\"Bad\" value={bad} />\n          <StatisticsItem lebel=\"Total\" value={total} />\n          <StatisticsItem\n            lebel=\"Positive feedback\"\n            value={total === 0 ? 0 : `${positivePercentage}%`}\n          />\n        </ul>\n      )}\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport './FeedbackOptions.scss';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul className=\"feedback-list\">\n      {options.map(review => (\n        <li key={review} className=\"feedback-items\">\n          <button\n            type=\"button\"\n            name={review}\n            className=\"feedback-btn\"\n            onClick={() => onLeaveFeedback(review)}\n          >\n            {review}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import './Section.scss';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className=\"section\">\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","import { useState } from 'react';\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Section from '../Section';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const arrState = Object.keys({ good, neutral, bad });\n\n  const addReview = review => {\n    switch (review) {\n      case arrState[0]:\n        setGood(prevGood => prevGood + 1);\n        break;\n\n      case arrState[1]:\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n\n      case arrState[2]:\n        setBad(prevBad => prevBad + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return Math.round((good * 100) / total);\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={arrState} onLeaveFeedback={addReview} />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}